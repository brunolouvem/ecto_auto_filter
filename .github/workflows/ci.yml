name: ci
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  ci:
    strategy:
      matrix:
        elixir: ['1.8', '1.9', '1.10']
        otp: ['22.2']
        postgres: ['11.7-alpine', '12.2-alpine']

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_DB: ecto_auto_filter
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - uses: actions/cache@v1
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          path: _build

      - name: Run mix deps.get
        run: mix deps.get

      - name: Run mix compile
        env:
          MIX_ENV: test
        run: mix compile --warnings-as-errors

      - name: Run mix ecto.create ecto.migrate and seeds
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/ecto_auto_filter
          MIX_ENV: test
        run: |
          mix ecto.create -r EctoAutoFilter.Test.Repo
          mix ecto.migrate -r EctoAutoFilter.Test.Repo
          mix run test/support/seeds.exs

      - name: Run Tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/ecto_auto_filter
          MIX_ENV: test
        run: |
          mix ci